@{
    ViewData["Title"] = "Chat";
}
>
<div id="appRoot"
     style="position:fixed;inset:0;display:flex;flex-direction:column;background:#0f0f10;color:#fff;font-family:'Segoe UI',Tahoma,Verdana,sans-serif;">

    <div style="height:56px;display:flex;align-items:center;justify-content:center;background:#1b1b1b;border-bottom:1px solid #2a2a2a;">
        <h2 style="margin:0;font-size:18px;letter-spacing:.5px;color:#ff4c4c;text-shadow:0 0 8px rgba(255,76,76,.4);">
            SignalR Chat
        </h2>
    </div>

    <div id="messagesList"
         style="flex:1;overflow-y:auto;padding:16px;display:flex;flex-direction:column;gap:10px;background:linear-gradient(180deg,#111 0%,#141414 100%);">
    </div>

    <div style="padding:10px;background:#1b1b1b;border-top:1px solid #2a2a2a;">
        <div style="max-width:1100px;margin:0 auto;display:flex;gap:10px;align-items:center;">
            <input id="userInput" type="text" placeholder="Adınız"
                   style="width:180px;min-width:120px;padding:10px 12px;border-radius:12px;border:1px solid #333;background:#212121;color:#fff;" />
            <input id="messageInput" type="text" placeholder="Mesajınız"
                   style="flex:1;padding:10px 12px;border-radius:12px;border:1px solid #333;background:#212121;color:#fff;" />
            <button onclick="sendMessage()"
                    style="padding:10px 16px;border:none;border-radius:12px;background:#ff4c4c;color:white;font-weight:600;cursor:pointer;">
                Gönder
            </button>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chathub")
        .build();

    connection.on("ReceiveMessage", (user, message) => {
        addMessage(user, message);
    });

    connection.start().catch(err => console.error(err.toString()));

    document.addEventListener("keydown", (e) => {
        if (e.key === "Enter") {
            const active = document.activeElement?.id;
            if (active === "messageInput" || active === "userInput") {
                sendMessage();
            }
        }
    });

    function sendMessage() {
        const user = document.getElementById("userInput").value.trim();
        const message = document.getElementById("messageInput").value.trim();
        if (!user || !message) return;

        connection.invoke("SendMessage", user, message)
            .then(() => document.getElementById("messageInput").value = "")
            .catch(err => console.error(err.toString()));
    }

    function addMessage(user, message) {
        const currentUser = document.getElementById("userInput").value.trim();
        const isSelf = currentUser && user === currentUser;

        const bubble = document.createElement("div");
        bubble.textContent = user + ": " + message;

        bubble.style.maxWidth = "78%";
        bubble.style.padding = "10px 14px";
        bubble.style.borderRadius = "16px";
        bubble.style.wordWrap = "break-word";
        bubble.style.boxShadow = "0 2px 10px rgba(0,0,0,.25)";
        bubble.style.alignSelf = isSelf ? "flex-end" : "flex-start";
        bubble.style.background = isSelf ? "#ff4c4c" : "#2b2b2b";
        bubble.style.color = "#fff";

        const list = document.getElementById("messagesList");
        list.appendChild(bubble);
        list.scrollTop = list.scrollHeight;
    }
</script>
